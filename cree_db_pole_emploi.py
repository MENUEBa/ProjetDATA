# -*- coding: utf-8 -*-
"""Cree_db_pole_emploi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10L0YSBzB1vzjPajLMZNx_YpHRqNzmJUU
"""

# Installations préalables nécéssaires dans le terminal
# pip install gensim
# pip install httpie
# !pip install requests
# pip install PyPDF2
# %pip install spacy

def acces():

  import json
  import http.client

  conn = http.client.HTTPSConnection("entreprise.pole-emploi.fr")
  payload = "client_id=PAR_projetv2_e02793cbd340bab1d37781b12b99e06d25ed9273604c2061d1ad1e5b4f167758&client_secret=92cdb43ccf89844279e6bfc8ffbe1a80e301098cb4ad33978c50db544b57c2db&scope=api_offresdemploiv2%20application_PAR_projetv2_e02793cbd340bab1d37781b12b99e06d25ed9273604c2061d1ad1e5b4f167758%20o2dsoffre&grant_type=client_credentials"
  headers = {
    'cookie': "so007-peame-affinity-prod-p=ab3a188a2c2569a2; BIGipServerPOOL_PROD02-SDDC-K8S_HTTPS=!CZLZdbzdUC0otKfGs4t8wMAtY5XJdQbCTKXrEvxLEYwITeobaBoVFreqmeQBUTUhoPkhCRjQ9MeJwA%3D%3D; TS0188135e=01b3abf0a218d19ca4f52cf0f6e614517b15ec521b0cbb5974a9c19c85b2141c1f3cb60fa064923c42b73b76a9afa4ba184abe84a2",
    'Content-Type': "application/x-www-form-urlencoded",
    'User-Agent': "insomnia/8.2.0"
  }
  conn.request("POST", "/connexion/oauth2/access_token?realm=%2Fpartenaire", payload, headers)
  res = conn.getresponse()
  data = res.read()
  donnee = data.decode("utf-8")

  # Récupérez le token
  donnee_JSON = json.loads(donnee)
  access_token = donnee_JSON.get('access_token')
  return access_token

def cree_db():

    import json
    import http.client

    conn = http.client.HTTPSConnection("api.emploi-store.fr")

    payload = ""

    headers = {
    'cookie': "BIGipServerVS_EX035-VIPA-A4PMEX_HTTP.app~POOL_EX035-VIPA-A4PMEX_HTTP=251070986.10062.0000; TS01889661=01b3abf0a2b4ced48023543abda8fc722c3107bde676a0b1434950a7e4437ecfb46660c7bf71ae1b7a99a26bce8b45f31035b35f34",
    'Authorization': "Bearer {}".format(acces())
    }

    conn.request("GET", "/partenaire/offresdemploi/v2/offres/search?maxCreationDate=2023-09-30T12%3A00%3A00Z&minCreationDate=2023-09-01T12%3A00%3A00Z", payload, headers)

    res = conn.getresponse()
    data = res.read()
    data_JSON = data.decode("utf-8")

    # Charger les données JSON
    data = json.loads(data_JSON)

    # Enregistrer les données dans un fichier JSON
    with open('database.json', 'w') as json_file:
      json.dump(data, json_file, indent=4)  # indent=4 pour une mise en forme plus lisible

cree_db()